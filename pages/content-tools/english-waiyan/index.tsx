
import { Table, Image as IImage } from 'antd'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import styles from '../../../styles/Home.module.css'
import type { ColumnsType } from 'antd/es/table';
import DataJson from '../../../json/puppeteer-english-小学一起.json'
import axios from 'axios'
import _ from 'lodash'
interface DataType {
  value: number
  key: string;
  name: string;
}

function PrefixInteger(num: Number, length: Number) {
  return (Array(length).join('0') + num).slice(-length);
}
//判断图片是否存在
async function isImg(imgurl: string) {
  try {
    return await new Promise(function (resolve, reject) {
      // @ts-ignore
      const ImgObj = new Image() //判断图片是否存在
      ImgObj.src = imgurl
      ImgObj.onload = function (res: any) {
        resolve(res);
      }
      ImgObj.onerror = function (err: any) {
        reject(err)
      }
    })
  } catch (e) {
  } // 加上这句不会报错（Uncaught (in promise)）
}


// const queryCategoryByGradeAndVersiion = ({ grade, version }: { grade: string | number, version?: string }) => {
//   return `https://k12-nse-cdn.unipus.cn/books/appwx/1l${grade}_V2/wxjson/catalog.json?v=20231119714`
//   // return 'https://k12-nse-cdn.unipus.cn/books/1l1_V2/cover001/1l1_V2_c004.jpg?v=20231119500'
// }

const Home: NextPage = () => {
  const title = '外研英语'
  const [data, setData] = useState<any>([])
  const [visible, setVisible] = useState(false)
  const [currentImages, setCurrentImages] = useState<string[]>([])

  const groupData = (data: any) => {
    const result = _.chain(data)
      .groupBy("pNumber")
      .toPairs()
      .map(function (currentItem) {
        return _.zipObject(["page", "list"], currentItem);
      })
      .value();
    return result
  }

  const groupImages = async (data: { page: string }[], grade: number) => {
    const imgs = []
    const minPage = _.minBy(data, 'page')
    const maxPage = _.maxBy(data, 'page')
    for (let index = 1; index < Number(maxPage?.page) + 10; index++) {
      // const i = data[index];
      const page = PrefixInteger(index, 3)
      const coverImage = `https://k12-nse-cdn.unipus.cn/books/1l${grade}_V2/cover${page}/1l${grade}_V2_c${page}.jpg?v=20231119500`
      const pageImage = `https://k12-nse-cdn.unipus.cn/books/1l${grade}_V2/page${page}/1l${grade}_V2_p${page}.jpg?v=20231119500`
      const img = index < 6 && await isImg(coverImage) ? coverImage : pageImage
      imgs.push(img)
    }
    return imgs
  }

  // 获取当前关卡
  useEffect(() => {
    const data = DataJson.map((i, index) => {
      return {
        ...i,
        key: index,
        data: groupData(i.data).map((item) => ({
          ...item,
          page: Number(item.page)
        }))
      }
    })
    console.log(data)
    setData(data)
  }, [])

  const columns: ColumnsType<DataType> = [
    {
      title: '标题',
      dataIndex: 'text',
      align: 'center',
      key: 'text',
    },
    {
      title: '图',
      dataIndex: 'list',
      key: 'level',
      align: 'center',
      render: (record, _) => (
        <a style={{ color: '#0070f3' }}
          onClick={async () => {
            setVisible(true)
            // @ts-ignore
            const images = await groupImages(_.data, _.value)
            console.log('iamges', images, _)
            setCurrentImages(images)
          }}
        >
          详情
        </a>
      ),
    },
  ]

  return (
    <div className={styles.container}>
      <Head>
        <title>{title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Table columns={columns} dataSource={data} />
      <div style={{ display: 'none' }}>
        <IImage.PreviewGroup
          preview={{
            visible,
            onVisibleChange: (vis) => setVisible(vis)
          }}>
          {
            currentImages.map((i, index) => (
              <IImage src={i} key={index} />
            ))
          }
        </IImage.PreviewGroup>
      </div>
    </div>
  )
}
// export async function getStaticProps(context: GetStaticPropsContext) {
//   return {
//     props: {}, // will be passed to the page component as props
//   }
// }
export default Home
